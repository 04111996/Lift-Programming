{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\saran.kumar\\\\Desktop\\\\Lift Programming\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  floor: ''\n};\n\nvar buttonReducer = function buttonReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ELEVATE':\n      return _objectSpread({}, state, {\n        floor: action.name\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default buttonReducer;","map":{"version":3,"sources":["C:\\Users\\saran.kumar\\Desktop\\Lift Programming\\src\\reducers\\buttonReducer.js"],"names":["initialState","floor","buttonReducer","state","action","type","name"],"mappings":";;;;;;AAAE,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,eAAeD,aAAf","sourcesContent":["  const initialState = {\r\n    floor: ''\r\n  }\r\n\r\n  const buttonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'ELEVATE':\r\n        return {\r\n          ...state,\r\n          floor: action.name,\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  export default buttonReducer;\r\n"]},"metadata":{},"sourceType":"module"}